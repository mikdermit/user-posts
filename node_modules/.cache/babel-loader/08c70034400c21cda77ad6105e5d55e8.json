{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikde\\\\Thinkful\\\\projects\\\\mock-interview-2\\\\src\\\\PostDetail.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ErrorMessage from \"./common/ErrorMessage\";\nexport default function PostDetail(_ref) {\n  let {\n    currentPost\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  const [error, setError] = useState(undefined);\n  console.log(currentPost); // get comments\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${currentPost}/comments`).then(response => response.json()).then(setComments).then(console.log(comments)).catch(setError);\n  }, [currentPost]); // display each comment\n\n  const commentList = comments.map(comment => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 47\n    }\n  }, comment.body));\n  return error ? /*#__PURE__*/React.createElement(ErrorMessage, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 51\n    }\n  }, commentList);\n}","map":{"version":3,"sources":["C:/Users/mikde/Thinkful/projects/mock-interview-2/src/PostDetail.js"],"names":["React","useState","useEffect","ErrorMessage","PostDetail","currentPost","comments","setComments","error","setError","undefined","console","log","fetch","then","response","json","catch","commentList","map","comment","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,eAAe,SAASC,UAAT,OAAqC;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACS,SAAD,CAAlC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ,EAHkD,CAIlD;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAE,8CAA6CR,WAAY,WAA3D,CAAL,CACGS,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQP,WAFR,EAGGO,IAHH,CAGQH,OAAO,CAACC,GAAR,CAAYN,QAAZ,CAHR,EAIGW,KAJH,CAISR,QAJT;AAKD,GANQ,EAMN,CAACJ,WAAD,CANM,CAAT,CALkD,CAalD;;AACA,QAAMa,WAAW,GAAGZ,QAAQ,CAACa,GAAT,CAAaC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACC,IAAb,CAAxB,CAApB;AAEA,SAAOb,KAAK,gBAAG,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKU,WAAL,CAAhD;AACD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ErrorMessage from \"./common/ErrorMessage\";\n\nexport default function PostDetail({ currentPost }) {\n  const [comments, setComments] = useState([]);\n  const [error, setError] = useState(undefined);\n  console.log(currentPost);\n  // get comments\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${currentPost}/comments`)\n      .then(response => response.json())\n      .then(setComments)\n      .then(console.log(comments))\n      .catch(setError);\n  }, [currentPost]);\n\n  // display each comment\n  const commentList = comments.map(comment => <li>{comment.body}</li>);\n\n  return error ? <ErrorMessage error={error} /> : <ul>{commentList}</ul>;\n}\n"]},"metadata":{},"sourceType":"module"}