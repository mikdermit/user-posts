{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikde\\\\Thinkful\\\\projects\\\\mock-interview-2\\\\src\\\\PostDetail.js\";\nimport React, { useState, useEffect } from 'react';\nimport ErrorMessage from './common/ErrorMessage';\nexport default function PostDetail(_ref) {\n  let {\n    currentPost\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  const [error, setError] = useState(undefined);\n  console.log(currentPost); // get comments\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${currentPost}/comments`).then(response => response.json()).then(setComments).then(console.log(comments)).catch(setError);\n  }, [currentPost]); // display each comment\n\n  const commentList = comments.map(comment => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, comment.body));\n  return error ? /*#__PURE__*/React.createElement(ErrorMessage, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, commentList);\n}","map":{"version":3,"sources":["C:/Users/mikde/Thinkful/projects/mock-interview-2/src/PostDetail.js"],"names":["React","useState","useEffect","ErrorMessage","PostDetail","currentPost","comments","setComments","error","setError","undefined","console","log","fetch","then","response","json","catch","commentList","map","comment","body"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,eAAe,SAASC,UAAT,OAAmC;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAChD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACS,SAAD,CAAlC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ,EAHgD,CAIhD;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAE,8CAA6CR,WAAY,WAA3D,CAAL,CACCS,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQP,WAFR,EAGCO,IAHD,CAGMH,OAAO,CAACC,GAAR,CAAYN,QAAZ,CAHN,EAIGW,KAJH,CAISR,QAJT;AAKD,GANQ,EAMN,CAACJ,WAAD,CANM,CAAT,CALgD,CAahD;;AACA,QAAMa,WAAW,GAAGZ,QAAQ,CAACa,GAAT,CAAaC,OAAO,iBACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACC,IAAb,CADkB,CAApB;AAIA,SAAOb,KAAK,gBAAI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKU,WAAL,CADF;AAED","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ErrorMessage from './common/ErrorMessage'\n\nexport default function PostDetail({currentPost}) {\n  const [comments, setComments] = useState([])\n  const [error, setError] = useState(undefined)\n  console.log(currentPost)\n  // get comments\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${currentPost}/comments`)\n    .then((response) => response.json())\n      .then(setComments)\n    .then(console.log(comments))\n      .catch(setError)\n  }, [currentPost])\n  \n  // display each comment\n  const commentList = comments.map(comment => (\n    <li>{comment.body}</li>\n  ))\n  \n  return error ? (<ErrorMessage error={error} />) \n  :(<ul>{commentList}</ul>)\n}"]},"metadata":{},"sourceType":"module"}