{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikde\\\\Thinkful\\\\projects\\\\mock-interview-2\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ErrorMessage from \"./common/ErrorMessage\";\nimport LoadingMessage from \"./common/LoadingMessage\";\nimport PostDetail from \"./PostDetail\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [currentPost, setCurrentPost] = useState({});\n  const [error, setError] = useState(undefined); //get posts on page load\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts?userId=1\").then(response => response.json()).then(setPosts).catch(setError);\n  }, []); // display each post\n\n  const postList = posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, post.body), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCurrentPost(post.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Show Posts\"), currentPost === post.id && /*#__PURE__*/React.createElement(PostDetail, {\n    currentPost: currentPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 35\n    }\n  }))); // check for error and posts before rendering\n\n  return error ? /*#__PURE__*/React.createElement(ErrorMessage, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }) : !posts ? /*#__PURE__*/React.createElement(LoadingMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, postList));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mikde/Thinkful/projects/mock-interview-2/src/App.js"],"names":["React","useEffect","useState","ErrorMessage","LoadingMessage","PostDetail","App","posts","setPosts","currentPost","setCurrentPost","error","setError","undefined","fetch","then","response","json","catch","postList","map","post","id","title","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACW,SAAD,CAAlC,CAHa,CAKb;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQP,QAFR,EAGGU,KAHH,CAGSN,QAHT;AAID,GALQ,EAKN,EALM,CAAT,CANa,CAab;;AACA,QAAMO,QAAQ,GAAGZ,KAAK,CAACa,GAAN,CAAUC,IAAI,iBAC7B;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,KAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAI,CAACG,IAAT,CAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAMd,cAAc,CAACW,IAAI,CAACC,EAAN,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIGb,WAAW,KAAKY,IAAI,CAACC,EAArB,iBAA2B,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAEb,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ9B,CADe,CAAjB,CAda,CAuBb;;AACA,SAAOE,KAAK,gBACV,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAER,CAACJ,KAAD,gBACF,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,gBAGF;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMY,QAAN,CADF,CALF;AASD;;AAED,eAAeb,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ErrorMessage from \"./common/ErrorMessage\";\nimport LoadingMessage from \"./common/LoadingMessage\";\nimport PostDetail from \"./PostDetail\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [currentPost, setCurrentPost] = useState({});\n  const [error, setError] = useState(undefined);\n\n  //get posts on page load\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts?userId=1\")\n      .then(response => response.json())\n      .then(setPosts)\n      .catch(setError);\n  }, []);\n\n  // display each post\n  const postList = posts.map(post => (\n    <div key={post.id}>\n      <h1>{post.title}</h1>\n      <p>{post.body}</p>\n      <button onClick={() => setCurrentPost(post.id)}>Show Posts</button>\n      {currentPost === post.id && <PostDetail currentPost={currentPost} />}\n    </div>\n  ));\n\n  // check for error and posts before rendering\n  return error ? (\n    <ErrorMessage error={error} />\n  ) : !posts ? (\n    <LoadingMessage />\n  ) : (\n    <div className=\"App\">\n      <div>{postList}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}